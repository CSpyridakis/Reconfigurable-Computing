// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _my_ip_hls_HH_
#define _my_ip_hls_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "ps2ip_fifo.h"
#include "core.h"
#include "ip2ps_fifo.h"
#include "fifo_w32_d64_A.h"
#include "fifo_w4_d64_A.h"
#include "fifo_w1_d64_A.h"
#include "start_for_core_U0.h"
#include "start_for_ip2ps_fbkb.h"

namespace ap_rtl {

struct my_ip_hls : public sc_module {
    // Port declarations 12
    sc_in< sc_lv<32> > slaveIn_TDATA;
    sc_in< sc_lv<4> > slaveIn_TSTRB;
    sc_in< sc_lv<1> > slaveIn_TLAST;
    sc_out< sc_lv<32> > masterOut_TDATA;
    sc_out< sc_lv<4> > masterOut_TSTRB;
    sc_out< sc_lv<1> > masterOut_TLAST;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > slaveIn_TVALID;
    sc_out< sc_logic > slaveIn_TREADY;
    sc_out< sc_logic > masterOut_TVALID;
    sc_in< sc_logic > masterOut_TREADY;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    my_ip_hls(sc_module_name name);
    SC_HAS_PROCESS(my_ip_hls);

    ~my_ip_hls();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    ps2ip_fifo* ps2ip_fifo_U0;
    core* core_U0;
    ip2ps_fifo* ip2ps_fifo_U0;
    fifo_w32_d64_A* ps2ipFifo_V_data_V_U;
    fifo_w4_d64_A* ps2ipFifo_V_strb_V_U;
    fifo_w1_d64_A* ps2ipFifo_V_last_V_U;
    fifo_w32_d64_A* ip2psFifo_V_data_V_U;
    fifo_w4_d64_A* ip2psFifo_V_strb_V_U;
    fifo_w1_d64_A* ip2psFifo_V_last_V_U;
    start_for_core_U0* start_for_core_U0_U;
    start_for_ip2ps_fbkb* start_for_ip2ps_fbkb_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ps2ip_fifo_U0_ap_start;
    sc_signal< sc_logic > ps2ip_fifo_U0_ap_done;
    sc_signal< sc_logic > ps2ip_fifo_U0_ap_continue;
    sc_signal< sc_logic > ps2ip_fifo_U0_ap_idle;
    sc_signal< sc_logic > ps2ip_fifo_U0_ap_ready;
    sc_signal< sc_logic > ps2ip_fifo_U0_start_out;
    sc_signal< sc_logic > ps2ip_fifo_U0_start_write;
    sc_signal< sc_logic > ps2ip_fifo_U0_slaveIn_TREADY;
    sc_signal< sc_lv<32> > ps2ip_fifo_U0_ps2ipFifo_V_data_V_din;
    sc_signal< sc_logic > ps2ip_fifo_U0_ps2ipFifo_V_data_V_write;
    sc_signal< sc_lv<4> > ps2ip_fifo_U0_ps2ipFifo_V_strb_V_din;
    sc_signal< sc_logic > ps2ip_fifo_U0_ps2ipFifo_V_strb_V_write;
    sc_signal< sc_lv<1> > ps2ip_fifo_U0_ps2ipFifo_V_last_V_din;
    sc_signal< sc_logic > ps2ip_fifo_U0_ps2ipFifo_V_last_V_write;
    sc_signal< sc_logic > core_U0_ap_start;
    sc_signal< sc_logic > core_U0_ap_done;
    sc_signal< sc_logic > core_U0_ap_continue;
    sc_signal< sc_logic > core_U0_ap_idle;
    sc_signal< sc_logic > core_U0_ap_ready;
    sc_signal< sc_logic > core_U0_start_out;
    sc_signal< sc_logic > core_U0_start_write;
    sc_signal< sc_logic > core_U0_ps2ipFifo_V_data_V_read;
    sc_signal< sc_logic > core_U0_ps2ipFifo_V_strb_V_read;
    sc_signal< sc_logic > core_U0_ps2ipFifo_V_last_V_read;
    sc_signal< sc_lv<32> > core_U0_ip2psFifo_V_data_V_din;
    sc_signal< sc_logic > core_U0_ip2psFifo_V_data_V_write;
    sc_signal< sc_lv<4> > core_U0_ip2psFifo_V_strb_V_din;
    sc_signal< sc_logic > core_U0_ip2psFifo_V_strb_V_write;
    sc_signal< sc_lv<1> > core_U0_ip2psFifo_V_last_V_din;
    sc_signal< sc_logic > core_U0_ip2psFifo_V_last_V_write;
    sc_signal< sc_logic > ip2ps_fifo_U0_ap_start;
    sc_signal< sc_logic > ip2ps_fifo_U0_ap_done;
    sc_signal< sc_logic > ip2ps_fifo_U0_ap_continue;
    sc_signal< sc_logic > ip2ps_fifo_U0_ap_idle;
    sc_signal< sc_logic > ip2ps_fifo_U0_ap_ready;
    sc_signal< sc_lv<32> > ip2ps_fifo_U0_masterOut_TDATA;
    sc_signal< sc_logic > ip2ps_fifo_U0_masterOut_TVALID;
    sc_signal< sc_lv<4> > ip2ps_fifo_U0_masterOut_TSTRB;
    sc_signal< sc_lv<1> > ip2ps_fifo_U0_masterOut_TLAST;
    sc_signal< sc_logic > ip2ps_fifo_U0_ip2psFifo_V_data_V_read;
    sc_signal< sc_logic > ip2ps_fifo_U0_ip2psFifo_V_strb_V_read;
    sc_signal< sc_logic > ip2ps_fifo_U0_ip2psFifo_V_last_V_read;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > ps2ipFifo_V_data_V_full_n;
    sc_signal< sc_lv<32> > ps2ipFifo_V_data_V_dout;
    sc_signal< sc_logic > ps2ipFifo_V_data_V_empty_n;
    sc_signal< sc_logic > ps2ipFifo_V_strb_V_full_n;
    sc_signal< sc_lv<4> > ps2ipFifo_V_strb_V_dout;
    sc_signal< sc_logic > ps2ipFifo_V_strb_V_empty_n;
    sc_signal< sc_logic > ps2ipFifo_V_last_V_full_n;
    sc_signal< sc_lv<1> > ps2ipFifo_V_last_V_dout;
    sc_signal< sc_logic > ps2ipFifo_V_last_V_empty_n;
    sc_signal< sc_logic > ip2psFifo_V_data_V_full_n;
    sc_signal< sc_lv<32> > ip2psFifo_V_data_V_dout;
    sc_signal< sc_logic > ip2psFifo_V_data_V_empty_n;
    sc_signal< sc_logic > ip2psFifo_V_strb_V_full_n;
    sc_signal< sc_lv<4> > ip2psFifo_V_strb_V_dout;
    sc_signal< sc_logic > ip2psFifo_V_strb_V_empty_n;
    sc_signal< sc_logic > ip2psFifo_V_last_V_full_n;
    sc_signal< sc_lv<1> > ip2psFifo_V_last_V_dout;
    sc_signal< sc_logic > ip2psFifo_V_last_V_empty_n;
    sc_signal< sc_lv<1> > start_for_core_U0_din;
    sc_signal< sc_logic > start_for_core_U0_full_n;
    sc_signal< sc_lv<1> > start_for_core_U0_dout;
    sc_signal< sc_logic > start_for_core_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_ip2ps_fifo_U0_din;
    sc_signal< sc_logic > start_for_ip2ps_fifo_U0_full_n;
    sc_signal< sc_lv<1> > start_for_ip2ps_fifo_U0_dout;
    sc_signal< sc_logic > start_for_ip2ps_fifo_U0_empty_n;
    sc_signal< sc_logic > ip2ps_fifo_U0_start_full_n;
    sc_signal< sc_logic > ip2ps_fifo_U0_start_write;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_rst_n_inv();
    void thread_ap_sync_continue();
    void thread_core_U0_ap_continue();
    void thread_core_U0_ap_start();
    void thread_ip2ps_fifo_U0_ap_continue();
    void thread_ip2ps_fifo_U0_ap_start();
    void thread_ip2ps_fifo_U0_start_full_n();
    void thread_ip2ps_fifo_U0_start_write();
    void thread_masterOut_TDATA();
    void thread_masterOut_TLAST();
    void thread_masterOut_TSTRB();
    void thread_masterOut_TVALID();
    void thread_ps2ip_fifo_U0_ap_continue();
    void thread_ps2ip_fifo_U0_ap_start();
    void thread_slaveIn_TREADY();
    void thread_start_for_core_U0_din();
    void thread_start_for_ip2ps_fifo_U0_din();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif

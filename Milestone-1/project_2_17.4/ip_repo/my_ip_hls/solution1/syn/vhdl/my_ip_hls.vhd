-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity my_ip_hls is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    slaveIn_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    slaveIn_TVALID : IN STD_LOGIC;
    slaveIn_TREADY : OUT STD_LOGIC;
    slaveIn_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    slaveIn_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    MasterOut_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    MasterOut_TVALID : OUT STD_LOGIC;
    MasterOut_TREADY : IN STD_LOGIC;
    MasterOut_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    MasterOut_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of my_ip_hls is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "my_ip_hls,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z045ffg900-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=0.000000,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=130,HLS_SYN_LUT=232}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_iter0_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_ST_iter1_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_ST_iter2_fsm_state3 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_ST_iter1_fsm_state0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_iter2_fsm_state0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;

    signal ap_rst_n_inv : STD_LOGIC;
    signal MasterOut_V_data_V_1_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal MasterOut_V_data_V_1_vld_in : STD_LOGIC;
    signal MasterOut_V_data_V_1_vld_out : STD_LOGIC;
    signal MasterOut_V_data_V_1_ack_in : STD_LOGIC;
    signal MasterOut_V_data_V_1_ack_out : STD_LOGIC;
    signal MasterOut_V_data_V_1_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal MasterOut_V_data_V_1_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal MasterOut_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal MasterOut_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal MasterOut_V_data_V_1_sel : STD_LOGIC;
    signal MasterOut_V_data_V_1_load_A : STD_LOGIC;
    signal MasterOut_V_data_V_1_load_B : STD_LOGIC;
    signal MasterOut_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal MasterOut_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal MasterOut_V_strb_V_1_data_out : STD_LOGIC_VECTOR (3 downto 0);
    signal MasterOut_V_strb_V_1_vld_in : STD_LOGIC;
    signal MasterOut_V_strb_V_1_vld_out : STD_LOGIC;
    signal MasterOut_V_strb_V_1_ack_in : STD_LOGIC;
    signal MasterOut_V_strb_V_1_ack_out : STD_LOGIC;
    signal MasterOut_V_strb_V_1_payload_A : STD_LOGIC_VECTOR (3 downto 0);
    signal MasterOut_V_strb_V_1_payload_B : STD_LOGIC_VECTOR (3 downto 0);
    signal MasterOut_V_strb_V_1_sel_rd : STD_LOGIC := '0';
    signal MasterOut_V_strb_V_1_sel_wr : STD_LOGIC := '0';
    signal MasterOut_V_strb_V_1_sel : STD_LOGIC;
    signal MasterOut_V_strb_V_1_load_A : STD_LOGIC;
    signal MasterOut_V_strb_V_1_load_B : STD_LOGIC;
    signal MasterOut_V_strb_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal MasterOut_V_strb_V_1_state_cmp_full : STD_LOGIC;
    signal MasterOut_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal MasterOut_V_last_V_1_vld_in : STD_LOGIC;
    signal MasterOut_V_last_V_1_vld_out : STD_LOGIC;
    signal MasterOut_V_last_V_1_ack_in : STD_LOGIC;
    signal MasterOut_V_last_V_1_ack_out : STD_LOGIC;
    signal MasterOut_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal MasterOut_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal MasterOut_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal MasterOut_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal MasterOut_V_last_V_1_sel : STD_LOGIC;
    signal MasterOut_V_last_V_1_load_A : STD_LOGIC;
    signal MasterOut_V_last_V_1_load_B : STD_LOGIC;
    signal MasterOut_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal MasterOut_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal slaveIn_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_iter0_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    signal ap_CS_iter0_fsm_state1 : STD_LOGIC;
    signal ap_CS_iter1_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    signal ap_CS_iter1_fsm_state2 : STD_LOGIC;
    signal ap_CS_iter2_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    signal ap_CS_iter2_fsm_state3 : STD_LOGIC;
    signal tmp_nbreadreq_fu_42_p5 : STD_LOGIC_VECTOR (0 downto 0);
    signal MasterOut_TDATA_blk_n : STD_LOGIC;
    signal tmp_reg_89 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_tmp_reg_89 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal tmp_data_V_reg_93 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_strb_V_reg_98 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_last_V_reg_103 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_iter0_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_iter1_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_NS_iter2_fsm : STD_LOGIC_VECTOR (1 downto 0);


begin




    MasterOut_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                MasterOut_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = MasterOut_V_data_V_1_ack_out) and (ap_const_logic_1 = MasterOut_V_data_V_1_vld_out))) then 
                                        MasterOut_V_data_V_1_sel_rd <= not(MasterOut_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    MasterOut_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                MasterOut_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = MasterOut_V_data_V_1_ack_in) and (ap_const_logic_1 = MasterOut_V_data_V_1_vld_in))) then 
                                        MasterOut_V_data_V_1_sel_wr <= not(MasterOut_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    MasterOut_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                MasterOut_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = MasterOut_V_data_V_1_vld_in) and (ap_const_lv2_2 = MasterOut_V_data_V_1_state)) or ((ap_const_logic_0 = MasterOut_V_data_V_1_vld_in) and (ap_const_logic_1 = MasterOut_V_data_V_1_ack_out) and (ap_const_lv2_3 = MasterOut_V_data_V_1_state)))) then 
                    MasterOut_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_0 = MasterOut_V_data_V_1_ack_out) and (ap_const_lv2_1 = MasterOut_V_data_V_1_state)) or ((ap_const_logic_0 = MasterOut_V_data_V_1_ack_out) and (ap_const_logic_1 = MasterOut_V_data_V_1_vld_in) and (ap_const_lv2_3 = MasterOut_V_data_V_1_state)))) then 
                    MasterOut_V_data_V_1_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = MasterOut_V_data_V_1_vld_in) and (ap_const_logic_1 = MasterOut_V_data_V_1_ack_out))) and not(((ap_const_logic_0 = MasterOut_V_data_V_1_ack_out) and (ap_const_logic_1 = MasterOut_V_data_V_1_vld_in))) and (ap_const_lv2_3 = MasterOut_V_data_V_1_state)) or ((ap_const_logic_1 = MasterOut_V_data_V_1_ack_out) and (ap_const_lv2_1 = MasterOut_V_data_V_1_state)) or ((ap_const_logic_1 = MasterOut_V_data_V_1_vld_in) and (ap_const_lv2_2 = MasterOut_V_data_V_1_state)))) then 
                    MasterOut_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    MasterOut_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    MasterOut_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                MasterOut_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = MasterOut_V_last_V_1_ack_out) and (ap_const_logic_1 = MasterOut_V_last_V_1_vld_out))) then 
                                        MasterOut_V_last_V_1_sel_rd <= not(MasterOut_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    MasterOut_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                MasterOut_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = MasterOut_V_last_V_1_ack_in) and (ap_const_logic_1 = MasterOut_V_last_V_1_vld_in))) then 
                                        MasterOut_V_last_V_1_sel_wr <= not(MasterOut_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    MasterOut_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                MasterOut_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = MasterOut_V_last_V_1_vld_in) and (ap_const_lv2_2 = MasterOut_V_last_V_1_state)) or ((ap_const_logic_0 = MasterOut_V_last_V_1_vld_in) and (ap_const_lv2_3 = MasterOut_V_last_V_1_state) and (ap_const_logic_1 = MasterOut_V_last_V_1_ack_out)))) then 
                    MasterOut_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_0 = MasterOut_V_last_V_1_ack_out) and (ap_const_lv2_1 = MasterOut_V_last_V_1_state)) or ((ap_const_logic_0 = MasterOut_V_last_V_1_ack_out) and (ap_const_lv2_3 = MasterOut_V_last_V_1_state) and (ap_const_logic_1 = MasterOut_V_last_V_1_vld_in)))) then 
                    MasterOut_V_last_V_1_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = MasterOut_V_last_V_1_vld_in) and (ap_const_logic_1 = MasterOut_V_last_V_1_ack_out))) and not(((ap_const_logic_0 = MasterOut_V_last_V_1_ack_out) and (ap_const_logic_1 = MasterOut_V_last_V_1_vld_in))) and (ap_const_lv2_3 = MasterOut_V_last_V_1_state)) or ((ap_const_lv2_1 = MasterOut_V_last_V_1_state) and (ap_const_logic_1 = MasterOut_V_last_V_1_ack_out)) or ((ap_const_lv2_2 = MasterOut_V_last_V_1_state) and (ap_const_logic_1 = MasterOut_V_last_V_1_vld_in)))) then 
                    MasterOut_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    MasterOut_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    MasterOut_V_strb_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                MasterOut_V_strb_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = MasterOut_V_strb_V_1_ack_out) and (ap_const_logic_1 = MasterOut_V_strb_V_1_vld_out))) then 
                                        MasterOut_V_strb_V_1_sel_rd <= not(MasterOut_V_strb_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    MasterOut_V_strb_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                MasterOut_V_strb_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = MasterOut_V_strb_V_1_ack_in) and (ap_const_logic_1 = MasterOut_V_strb_V_1_vld_in))) then 
                                        MasterOut_V_strb_V_1_sel_wr <= not(MasterOut_V_strb_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    MasterOut_V_strb_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                MasterOut_V_strb_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = MasterOut_V_strb_V_1_vld_in) and (ap_const_lv2_2 = MasterOut_V_strb_V_1_state)) or ((ap_const_logic_0 = MasterOut_V_strb_V_1_vld_in) and (ap_const_lv2_3 = MasterOut_V_strb_V_1_state) and (ap_const_logic_1 = MasterOut_V_strb_V_1_ack_out)))) then 
                    MasterOut_V_strb_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_0 = MasterOut_V_strb_V_1_ack_out) and (ap_const_lv2_1 = MasterOut_V_strb_V_1_state)) or ((ap_const_logic_0 = MasterOut_V_strb_V_1_ack_out) and (ap_const_lv2_3 = MasterOut_V_strb_V_1_state) and (ap_const_logic_1 = MasterOut_V_strb_V_1_vld_in)))) then 
                    MasterOut_V_strb_V_1_state <= ap_const_lv2_1;
                elsif (((not(((ap_const_logic_0 = MasterOut_V_strb_V_1_vld_in) and (ap_const_logic_1 = MasterOut_V_strb_V_1_ack_out))) and not(((ap_const_logic_0 = MasterOut_V_strb_V_1_ack_out) and (ap_const_logic_1 = MasterOut_V_strb_V_1_vld_in))) and (ap_const_lv2_3 = MasterOut_V_strb_V_1_state)) or ((ap_const_lv2_1 = MasterOut_V_strb_V_1_state) and (ap_const_logic_1 = MasterOut_V_strb_V_1_ack_out)) or ((ap_const_lv2_2 = MasterOut_V_strb_V_1_state) and (ap_const_logic_1 = MasterOut_V_strb_V_1_vld_in)))) then 
                    MasterOut_V_strb_V_1_state <= ap_const_lv2_3;
                else 
                    MasterOut_V_strb_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_CS_iter0_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
            else
                ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
            end if;
        end if;
    end process;


    ap_CS_iter1_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
            else
                ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
            end if;
        end if;
    end process;


    ap_CS_iter2_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_iter2_fsm <= ap_ST_iter2_fsm_state0;
            else
                ap_CS_iter2_fsm <= ap_NS_iter2_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = MasterOut_V_data_V_1_load_A)) then
                MasterOut_V_data_V_1_payload_A <= tmp_data_V_reg_93;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = MasterOut_V_data_V_1_load_B)) then
                MasterOut_V_data_V_1_payload_B <= tmp_data_V_reg_93;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = MasterOut_V_last_V_1_load_A)) then
                MasterOut_V_last_V_1_payload_A <= tmp_last_V_reg_103;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = MasterOut_V_last_V_1_load_B)) then
                MasterOut_V_last_V_1_payload_B <= tmp_last_V_reg_103;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = MasterOut_V_strb_V_1_load_A)) then
                MasterOut_V_strb_V_1_payload_A <= tmp_strb_V_reg_98;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = MasterOut_V_strb_V_1_load_B)) then
                MasterOut_V_strb_V_1_payload_B <= tmp_strb_V_reg_98;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_logic_0 = MasterOut_V_strb_V_1_ack_in) or (ap_const_logic_0 = MasterOut_V_data_V_1_ack_in) or (ap_const_logic_0 = MasterOut_V_last_V_1_ack_in) or (ap_const_boolean_1 = ap_block_state3_io))))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2))) then
                ap_reg_pp0_iter1_tmp_reg_89 <= tmp_reg_89;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((slaveIn_TVALID = ap_const_logic_0) and (tmp_nbreadreq_fu_42_p5 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_logic_0 = MasterOut_V_strb_V_1_ack_in) or (ap_const_logic_0 = MasterOut_V_data_V_1_ack_in) or (ap_const_logic_0 = MasterOut_V_last_V_1_ack_in) or (ap_const_boolean_1 = ap_block_state3_io))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_const_boolean_1 = ap_block_state2_io)))) and (tmp_nbreadreq_fu_42_p5 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                tmp_data_V_reg_93 <= slaveIn_TDATA;
                tmp_last_V_reg_103 <= slaveIn_TLAST;
                tmp_strb_V_reg_98 <= slaveIn_TSTRB;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((slaveIn_TVALID = ap_const_logic_0) and (tmp_nbreadreq_fu_42_p5 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_logic_0 = MasterOut_V_strb_V_1_ack_in) or (ap_const_logic_0 = MasterOut_V_data_V_1_ack_in) or (ap_const_logic_0 = MasterOut_V_last_V_1_ack_in) or (ap_const_boolean_1 = ap_block_state3_io))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_const_boolean_1 = ap_block_state2_io)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                tmp_reg_89 <= tmp_nbreadreq_fu_42_p5;
            end if;
        end if;
    end process;

    ap_NS_iter0_fsm_assign_proc : process (slaveIn_TVALID, MasterOut_V_data_V_1_ack_in, MasterOut_V_strb_V_1_ack_in, MasterOut_V_last_V_1_ack_in, ap_CS_iter0_fsm, ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm_state3, tmp_nbreadreq_fu_42_p5, ap_block_state2_io, ap_block_state3_io)
    begin
        case ap_CS_iter0_fsm is
            when ap_ST_iter0_fsm_state1 => 
                ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state1;
            when others =>  
                ap_NS_iter0_fsm <= "X";
        end case;
    end process;

    ap_NS_iter1_fsm_assign_proc : process (slaveIn_TVALID, MasterOut_V_data_V_1_ack_in, MasterOut_V_strb_V_1_ack_in, MasterOut_V_last_V_1_ack_in, ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm, ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm_state3, tmp_nbreadreq_fu_42_p5, ap_block_state2_io, ap_block_state3_io)
    begin
        case ap_CS_iter1_fsm is
            when ap_ST_iter1_fsm_state2 => 
                if ((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_logic_0 = MasterOut_V_strb_V_1_ack_in) or (ap_const_logic_0 = MasterOut_V_data_V_1_ack_in) or (ap_const_logic_0 = MasterOut_V_last_V_1_ack_in) or (ap_const_boolean_1 = ap_block_state3_io))))) and not(((slaveIn_TVALID = ap_const_logic_0) and (tmp_nbreadreq_fu_42_p5 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state2;
                elsif ((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_logic_0 = MasterOut_V_strb_V_1_ack_in) or (ap_const_logic_0 = MasterOut_V_data_V_1_ack_in) or (ap_const_logic_0 = MasterOut_V_last_V_1_ack_in) or (ap_const_boolean_1 = ap_block_state3_io))))) and ((ap_const_logic_0 = ap_CS_iter0_fsm_state1) or ((slaveIn_TVALID = ap_const_logic_0) and (tmp_nbreadreq_fu_42_p5 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state0;
                else
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state2;
                end if;
            when ap_ST_iter1_fsm_state0 => 
                if ((not((((slaveIn_TVALID = ap_const_logic_0) and (tmp_nbreadreq_fu_42_p5 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_logic_0 = MasterOut_V_strb_V_1_ack_in) or (ap_const_logic_0 = MasterOut_V_data_V_1_ack_in) or (ap_const_logic_0 = MasterOut_V_last_V_1_ack_in) or (ap_const_boolean_1 = ap_block_state3_io))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_const_boolean_1 = ap_block_state2_io)))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state2;
                else
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state0;
                end if;
            when others =>  
                ap_NS_iter1_fsm <= "XX";
        end case;
    end process;

    ap_NS_iter2_fsm_assign_proc : process (MasterOut_V_data_V_1_ack_in, MasterOut_V_strb_V_1_ack_in, MasterOut_V_last_V_1_ack_in, ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm, ap_CS_iter2_fsm_state3, ap_block_state2_io, ap_block_state3_io)
    begin
        case ap_CS_iter2_fsm is
            when ap_ST_iter2_fsm_state3 => 
                if ((not(((ap_const_logic_0 = MasterOut_V_strb_V_1_ack_in) or (ap_const_logic_0 = MasterOut_V_data_V_1_ack_in) or (ap_const_logic_0 = MasterOut_V_last_V_1_ack_in) or (ap_const_boolean_1 = ap_block_state3_io))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_io))) then
                    ap_NS_iter2_fsm <= ap_ST_iter2_fsm_state3;
                elsif ((not(((ap_const_logic_0 = MasterOut_V_strb_V_1_ack_in) or (ap_const_logic_0 = MasterOut_V_data_V_1_ack_in) or (ap_const_logic_0 = MasterOut_V_last_V_1_ack_in) or (ap_const_boolean_1 = ap_block_state3_io))) and ((ap_const_logic_0 = ap_CS_iter1_fsm_state2) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_const_boolean_1 = ap_block_state2_io))))) then
                    ap_NS_iter2_fsm <= ap_ST_iter2_fsm_state0;
                else
                    ap_NS_iter2_fsm <= ap_ST_iter2_fsm_state3;
                end if;
            when ap_ST_iter2_fsm_state0 => 
                if ((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_logic_0 = MasterOut_V_strb_V_1_ack_in) or (ap_const_logic_0 = MasterOut_V_data_V_1_ack_in) or (ap_const_logic_0 = MasterOut_V_last_V_1_ack_in) or (ap_const_boolean_1 = ap_block_state3_io))))) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2))) then
                    ap_NS_iter2_fsm <= ap_ST_iter2_fsm_state3;
                else
                    ap_NS_iter2_fsm <= ap_ST_iter2_fsm_state0;
                end if;
            when others =>  
                ap_NS_iter2_fsm <= "XX";
        end case;
    end process;
    MasterOut_TDATA <= MasterOut_V_data_V_1_data_out;

    MasterOut_TDATA_blk_n_assign_proc : process(MasterOut_V_data_V_1_state, ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm_state3, tmp_reg_89, ap_reg_pp0_iter1_tmp_reg_89)
    begin
        if ((((ap_reg_pp0_iter1_tmp_reg_89 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter2_fsm_state3)) or ((tmp_reg_89 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2)))) then 
            MasterOut_TDATA_blk_n <= MasterOut_V_data_V_1_state(1);
        else 
            MasterOut_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    MasterOut_TLAST <= MasterOut_V_last_V_1_data_out;
    MasterOut_TSTRB <= MasterOut_V_strb_V_1_data_out;
    MasterOut_TVALID <= MasterOut_V_last_V_1_state(0);
    MasterOut_V_data_V_1_ack_in <= MasterOut_V_data_V_1_state(1);
    MasterOut_V_data_V_1_ack_out <= MasterOut_TREADY;

    MasterOut_V_data_V_1_data_out_assign_proc : process(MasterOut_V_data_V_1_payload_A, MasterOut_V_data_V_1_payload_B, MasterOut_V_data_V_1_sel)
    begin
        if ((ap_const_logic_1 = MasterOut_V_data_V_1_sel)) then 
            MasterOut_V_data_V_1_data_out <= MasterOut_V_data_V_1_payload_B;
        else 
            MasterOut_V_data_V_1_data_out <= MasterOut_V_data_V_1_payload_A;
        end if; 
    end process;

    MasterOut_V_data_V_1_load_A <= (not(MasterOut_V_data_V_1_sel_wr) and MasterOut_V_data_V_1_state_cmp_full);
    MasterOut_V_data_V_1_load_B <= (MasterOut_V_data_V_1_state_cmp_full and MasterOut_V_data_V_1_sel_wr);
    MasterOut_V_data_V_1_sel <= MasterOut_V_data_V_1_sel_rd;
    MasterOut_V_data_V_1_state_cmp_full <= '0' when (MasterOut_V_data_V_1_state = ap_const_lv2_1) else '1';

    MasterOut_V_data_V_1_vld_in_assign_proc : process(MasterOut_V_data_V_1_ack_in, MasterOut_V_strb_V_1_ack_in, MasterOut_V_last_V_1_ack_in, ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm_state3, tmp_reg_89, ap_block_state2_io, ap_block_state3_io)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_logic_0 = MasterOut_V_strb_V_1_ack_in) or (ap_const_logic_0 = MasterOut_V_data_V_1_ack_in) or (ap_const_logic_0 = MasterOut_V_last_V_1_ack_in) or (ap_const_boolean_1 = ap_block_state3_io))))) and (tmp_reg_89 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2))) then 
            MasterOut_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            MasterOut_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    MasterOut_V_data_V_1_vld_out <= MasterOut_V_data_V_1_state(0);
    MasterOut_V_last_V_1_ack_in <= MasterOut_V_last_V_1_state(1);
    MasterOut_V_last_V_1_ack_out <= MasterOut_TREADY;

    MasterOut_V_last_V_1_data_out_assign_proc : process(MasterOut_V_last_V_1_payload_A, MasterOut_V_last_V_1_payload_B, MasterOut_V_last_V_1_sel)
    begin
        if ((ap_const_logic_1 = MasterOut_V_last_V_1_sel)) then 
            MasterOut_V_last_V_1_data_out <= MasterOut_V_last_V_1_payload_B;
        else 
            MasterOut_V_last_V_1_data_out <= MasterOut_V_last_V_1_payload_A;
        end if; 
    end process;

    MasterOut_V_last_V_1_load_A <= (not(MasterOut_V_last_V_1_sel_wr) and MasterOut_V_last_V_1_state_cmp_full);
    MasterOut_V_last_V_1_load_B <= (MasterOut_V_last_V_1_state_cmp_full and MasterOut_V_last_V_1_sel_wr);
    MasterOut_V_last_V_1_sel <= MasterOut_V_last_V_1_sel_rd;
    MasterOut_V_last_V_1_state_cmp_full <= '0' when (MasterOut_V_last_V_1_state = ap_const_lv2_1) else '1';

    MasterOut_V_last_V_1_vld_in_assign_proc : process(MasterOut_V_data_V_1_ack_in, MasterOut_V_strb_V_1_ack_in, MasterOut_V_last_V_1_ack_in, ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm_state3, tmp_reg_89, ap_block_state2_io, ap_block_state3_io)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_logic_0 = MasterOut_V_strb_V_1_ack_in) or (ap_const_logic_0 = MasterOut_V_data_V_1_ack_in) or (ap_const_logic_0 = MasterOut_V_last_V_1_ack_in) or (ap_const_boolean_1 = ap_block_state3_io))))) and (tmp_reg_89 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2))) then 
            MasterOut_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            MasterOut_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    MasterOut_V_last_V_1_vld_out <= MasterOut_V_last_V_1_state(0);
    MasterOut_V_strb_V_1_ack_in <= MasterOut_V_strb_V_1_state(1);
    MasterOut_V_strb_V_1_ack_out <= MasterOut_TREADY;

    MasterOut_V_strb_V_1_data_out_assign_proc : process(MasterOut_V_strb_V_1_payload_A, MasterOut_V_strb_V_1_payload_B, MasterOut_V_strb_V_1_sel)
    begin
        if ((ap_const_logic_1 = MasterOut_V_strb_V_1_sel)) then 
            MasterOut_V_strb_V_1_data_out <= MasterOut_V_strb_V_1_payload_B;
        else 
            MasterOut_V_strb_V_1_data_out <= MasterOut_V_strb_V_1_payload_A;
        end if; 
    end process;

    MasterOut_V_strb_V_1_load_A <= (not(MasterOut_V_strb_V_1_sel_wr) and MasterOut_V_strb_V_1_state_cmp_full);
    MasterOut_V_strb_V_1_load_B <= (MasterOut_V_strb_V_1_state_cmp_full and MasterOut_V_strb_V_1_sel_wr);
    MasterOut_V_strb_V_1_sel <= MasterOut_V_strb_V_1_sel_rd;
    MasterOut_V_strb_V_1_state_cmp_full <= '0' when (MasterOut_V_strb_V_1_state = ap_const_lv2_1) else '1';

    MasterOut_V_strb_V_1_vld_in_assign_proc : process(MasterOut_V_data_V_1_ack_in, MasterOut_V_strb_V_1_ack_in, MasterOut_V_last_V_1_ack_in, ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm_state3, tmp_reg_89, ap_block_state2_io, ap_block_state3_io)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state2_io) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_logic_0 = MasterOut_V_strb_V_1_ack_in) or (ap_const_logic_0 = MasterOut_V_data_V_1_ack_in) or (ap_const_logic_0 = MasterOut_V_last_V_1_ack_in) or (ap_const_boolean_1 = ap_block_state3_io))))) and (tmp_reg_89 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter1_fsm_state2))) then 
            MasterOut_V_strb_V_1_vld_in <= ap_const_logic_1;
        else 
            MasterOut_V_strb_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    MasterOut_V_strb_V_1_vld_out <= MasterOut_V_strb_V_1_state(0);
    ap_CS_iter0_fsm_state1 <= ap_CS_iter0_fsm(0);
    ap_CS_iter1_fsm_state2 <= ap_CS_iter1_fsm(1);
    ap_CS_iter2_fsm_state3 <= ap_CS_iter2_fsm(1);

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(slaveIn_TVALID, tmp_nbreadreq_fu_42_p5)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((slaveIn_TVALID = ap_const_logic_0) and (tmp_nbreadreq_fu_42_p5 = ap_const_lv1_1));
    end process;


    ap_block_state2_io_assign_proc : process(MasterOut_V_data_V_1_ack_in, tmp_reg_89)
    begin
                ap_block_state2_io <= ((ap_const_logic_0 = MasterOut_V_data_V_1_ack_in) and (tmp_reg_89 = ap_const_lv1_1));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_io_assign_proc : process(MasterOut_V_data_V_1_ack_in, ap_reg_pp0_iter1_tmp_reg_89)
    begin
                ap_block_state3_io <= ((ap_const_logic_0 = MasterOut_V_data_V_1_ack_in) and (ap_reg_pp0_iter1_tmp_reg_89 = ap_const_lv1_1));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(MasterOut_V_data_V_1_ack_in, MasterOut_V_strb_V_1_ack_in, MasterOut_V_last_V_1_ack_in)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((ap_const_logic_0 = MasterOut_V_strb_V_1_ack_in) or (ap_const_logic_0 = MasterOut_V_data_V_1_ack_in) or (ap_const_logic_0 = MasterOut_V_last_V_1_ack_in));
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    slaveIn_TDATA_blk_n_assign_proc : process(slaveIn_TVALID, ap_CS_iter0_fsm_state1, tmp_nbreadreq_fu_42_p5)
    begin
        if (((tmp_nbreadreq_fu_42_p5 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            slaveIn_TDATA_blk_n <= slaveIn_TVALID;
        else 
            slaveIn_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    slaveIn_TREADY_assign_proc : process(slaveIn_TVALID, MasterOut_V_data_V_1_ack_in, MasterOut_V_strb_V_1_ack_in, MasterOut_V_last_V_1_ack_in, ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state2, ap_CS_iter2_fsm_state3, tmp_nbreadreq_fu_42_p5, ap_block_state2_io, ap_block_state3_io)
    begin
        if ((not((((slaveIn_TVALID = ap_const_logic_0) and (tmp_nbreadreq_fu_42_p5 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_iter2_fsm_state3) and ((ap_const_logic_0 = MasterOut_V_strb_V_1_ack_in) or (ap_const_logic_0 = MasterOut_V_data_V_1_ack_in) or (ap_const_logic_0 = MasterOut_V_last_V_1_ack_in) or (ap_const_boolean_1 = ap_block_state3_io))) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and (ap_const_boolean_1 = ap_block_state2_io)))) and (tmp_nbreadreq_fu_42_p5 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            slaveIn_TREADY <= ap_const_logic_1;
        else 
            slaveIn_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    tmp_nbreadreq_fu_42_p5 <= (0=>(slaveIn_TVALID), others=>'-');
end behav;
